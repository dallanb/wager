version: "3.2"

services:
  adminer:
    container_name: adminer
    build:
      context: ${HUNCHO_DIR}/services/adminer
      dockerfile: ${HUNCHO_DIR}/services/adminer/build/Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-net
  wager:
    container_name: wager
    build:
      context: ${HUNCHO_DIR}/services/wager
      dockerfile: ${HUNCHO_DIR}/services/wager/build/Dockerfile
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/wager/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/wager/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/wager/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/wager/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/wager/src:/home/app/src
      - ${HUNCHO_DIR}/services/wager/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/wager/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/wager/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.wager
    healthcheck:
      test: curl --fail -s wager:5000/ping || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
    depends_on:
#      - wager_cache
      - wager_db
    networks:
      - app-net
#  wager_cache:
#    container_name: wager_cache
#    build:
#      context: ${HUNCHO_DIR}/services/redis
#      dockerfile: ${HUNCHO_DIR}/services/redis/build/Dockerfile
#    restart: unless-stopped
#    volumes:
#      - ${HUNCHO_DIR}/data/dev/wager_cache/redis_data:/var/lib/redis
#      - ${HUNCHO_DIR}/data/dev/wager_cache/redis.conf:/usr/local/etc/redis/redis.conf
#    env_file:
#      - ${HUNCHO_DIR}/env/dev/.env.wager_cache
#    healthcheck:
#      test: ["CMD", "redis-cli","ping"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
  wager_db:
    container_name: wager_db
    build:
      context: ${HUNCHO_DIR}/services/postgresql
      dockerfile: ${HUNCHO_DIR}/services/postgresql/build/Dockerfile
      args:
        POSTGRES_VERSION: 9.6
    ports:
      - 5432:5432
    volumes:
      - ${HUNCHO_DIR}/data/dev/wager_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.wager_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wager"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
  wager_proxy:
    container_name: wager_proxy
    build:
      context: ${HUNCHO_DIR}/services/wager/proxy
      dockerfile: ${HUNCHO_DIR}/services/wager/proxy/build/Dockerfile
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/wager/statics/.:/usr/share/nginx/
    ports:
      - 80:80
    depends_on:
      - wager
    networks:
      - app-net
networks:
    app-net:
        external:
            name: build_app-net