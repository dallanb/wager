"""empty message

Revision ID: 279403874592
Revises: cee195e8de52
Create Date: 2020-08-04 00:38:29.796233

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '279403874592'
down_revision = 'cee195e8de52'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('participant_status',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('ctime', sa.BigInteger(), nullable=True),
                    sa.Column('mtime', sa.BigInteger(), nullable=True),
                    sa.Column('name', sa.Enum('pending', 'active', 'inactive', name='participantstatusenum'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('uuid')
                    )
    op.create_table('contest',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('ctime', sa.BigInteger(), nullable=True),
                    sa.Column('mtime', sa.BigInteger(), nullable=True),
                    sa.Column('contest_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('wager_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.ForeignKeyConstraint(['wager_uuid'], ['wager.uuid'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('uuid')
                    )
    op.create_table('participant',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('ctime', sa.BigInteger(), nullable=True),
                    sa.Column('mtime', sa.BigInteger(), nullable=True),
                    sa.Column('user_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('party_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.Column('status_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
                    sa.ForeignKeyConstraint(['party_uuid'], ['party.uuid'], ),
                    sa.ForeignKeyConstraint(['status_uuid'], ['participant_status.uuid'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('uuid')
                    )
    op.drop_constraint('wager_course_uuid_fkey', 'wager', type_='foreignkey')
    op.drop_constraint('wager_stake_uuid_fkey', 'wager', type_='foreignkey')
    op.drop_constraint('wager_party_uuid_fkey', 'wager', type_='foreignkey')
    op.drop_table('course')
    op.drop_table('party_member')
    op.add_column('party', sa.Column('name', sa.String(), nullable=False))
    op.add_column('party', sa.Column('wager_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False))
    op.create_unique_constraint(None, 'party', ['name'])
    op.create_foreign_key(None, 'party', 'wager', ['wager_uuid'], ['uuid'])
    op.drop_column('party', 'hash')
    op.add_column('stake',
                  sa.Column('participant_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False))
    op.create_foreign_key(None, 'stake', 'participant', ['participant_uuid'], ['uuid'])
    op.add_column('wager', sa.Column('owner_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False))
    op.drop_column('wager', 'stake_uuid')
    op.drop_column('wager', 'course_uuid')
    op.drop_column('wager', 'owner')
    op.drop_column('wager', 'party_uuid')
    op.drop_column('wager', 'time')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('wager', sa.Column('time', sa.BIGINT(), autoincrement=False, nullable=True))
    op.add_column('wager', sa.Column('party_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('wager', sa.Column('owner', postgresql.UUID(), autoincrement=False, nullable=False))
    op.add_column('wager', sa.Column('course_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('wager', sa.Column('stake_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('wager_party_uuid_fkey', 'wager', 'party', ['party_uuid'], ['uuid'])
    op.create_foreign_key('wager_stake_uuid_fkey', 'wager', 'stake', ['stake_uuid'], ['uuid'])
    op.create_foreign_key('wager_course_uuid_fkey', 'wager', 'course', ['course_uuid'], ['uuid'])
    op.drop_column('wager', 'owner_uuid')
    op.drop_constraint(None, 'stake', type_='foreignkey')
    op.drop_column('stake', 'participant_uuid')
    op.add_column('party', sa.Column('hash', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'party', type_='foreignkey')
    op.drop_constraint(None, 'party', type_='unique')
    op.drop_column('party', 'wager_uuid')
    op.drop_column('party', 'name')
    op.create_table('party_member',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('ctime', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('mtime', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('member', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('wager_party_uuid', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['wager_party_uuid'], ['party.uuid'],
                                            name='party_member_wager_party_uuid_fkey'),
                    sa.PrimaryKeyConstraint('id', name='party_member_pkey'),
                    sa.UniqueConstraint('uuid', name='party_member_uuid_key')
                    )
    op.create_table('course',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
                    sa.Column('ctime', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('mtime', sa.BIGINT(), autoincrement=False, nullable=True),
                    sa.Column('golf_canada_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='course_pkey'),
                    sa.UniqueConstraint('golf_canada_id', name='course_golf_canada_id_key'),
                    sa.UniqueConstraint('uuid', name='course_uuid_key')
                    )
    op.drop_table('participant')
    op.drop_table('contest')
    op.drop_table('participant_status')
    # ### end Alembic commands ###
