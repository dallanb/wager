"""empty message

Revision ID: cee195e8de52
Revises: 
Create Date: 2020-07-29 23:44:30.054049

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'cee195e8de52'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('golf_canada_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('golf_canada_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('party',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('hash', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('stake',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('currency', sqlalchemy_utils.types.currency.CurrencyType(length=3), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('wager_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.Enum('pending', 'active', 'inactive', name='wagerstatusenum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('party_member',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('member', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('wager_party_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.ForeignKeyConstraint(['wager_party_uuid'], ['party.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('wager',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('owner', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('time', sa.BigInteger(), nullable=True),
    sa.Column('stake_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('party_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('course_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('status_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.ForeignKeyConstraint(['course_uuid'], ['course.uuid'], ),
    sa.ForeignKeyConstraint(['party_uuid'], ['party.uuid'], ),
    sa.ForeignKeyConstraint(['stake_uuid'], ['stake.uuid'], ),
    sa.ForeignKeyConstraint(['status_uuid'], ['wager_status.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wager')
    op.drop_table('party_member')
    op.drop_table('wager_status')
    op.drop_table('stake')
    op.drop_table('party')
    op.drop_table('course')
    # ### end Alembic commands ###
