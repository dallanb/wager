version: "3.2"

services:
  wager:
    container_name: wager
    image: dallanbhatti/wager:qaw
    restart: on-failure
    env_file:
      - env/.env.wager
    healthcheck:
      test: curl --fail -s wager:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - wager_db
      - wager_kafka
      - wager_zookeeper
    networks:
      - wager-net
  wager_db:
    container_name: wager_db
    image: postgres:9.6
    ports:
      - 5432
    volumes:
      - wager_data:/var/lib/postgresql/data/
    env_file:
      - env/.env.wager_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wager"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - wager-net
  wager_kafka:
    container_name: wager_kafka
    image: wurstmeister/kafka:latest
    restart: on-failure
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - env/.env.wager_kafka
    depends_on:
      - wager_zookeeper
    networks:
      - wager-net
  wager_proxy:
    container_name: wager_proxy
    build:
      context: ./proxy
      dockerfile: ./proxy/build/Dockerfile
    restart: on-failure
    volumes:
      - wager_statics/.:/usr/share/nginx/
    ports:
      - 80:80
    depends_on:
      - wager
    networks:
      - wager-net
  wager_zookeeper:
    container_name: wager_zookeeper
    image: wurstmeister/zookeeper:latest
    restart: on-failure
    ports:
      - "2181:2181"
    env_file:
      - env/.env.wager_zookeeper
    networks:
      - wager-net
volumes:
  wager_data:
  wager_statics:
networks:
  wager-net:
    driver: bridge